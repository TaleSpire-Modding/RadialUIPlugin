name: Checks Builds on PR

on: [pull_request]

permissions:
  pull-requests: write
  contents: write

jobs:
  Build:
    strategy:
      matrix:
        os: windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Nuget
        uses: nuget/setup-nuget@v1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Dotnet Build
        run: |
          cd RadialUIPlugin
          dotnet restore RadialUIPlugin.csproj
          dotnet build RadialUIPlugin.csproj --configuration Release

  Test:
    needs: Build
    runs-on: windows-latest
    steps:
      - name: Setup Nuget
        uses: nuget/setup-nuget@v1

      - name: Checkout
        uses: actions/checkout@v2

      - name: Dotnet Build
        run: |
          cd RadialUIPlugin
          dotnet restore RadialUIPlugin.csproj
          dotnet build RadialUIPlugin.csproj --configuration Release
          
      - name: test
        run: |
          cd RadialUnitTests
          dotnet restore RadialUnitTests.csproj
          dotnet test --configuration Release --no-restore /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
          
      - name: Checkout Codecov
        uses: codecov/codecov-action@v2
        with:
          file: ./RadialUnitTests/coverage.opencover.xml
          flags: unit
          name: RadialUI

  dependabot:
    runs-on: ubuntu-latest
    # Checking the actor will prevent your Action run failing on non-Dependabot
    # PRs but also ensures that it only does work for Dependabot PRs.
    if: ${{ github.actor == 'dependabot[bot]' }}
    needs: Test
    steps:
      # This first step will fail if there's no metadata and so the approval
      # will not occur.
      - name: Dependabot metadata
        id: dependabot-metadata
        uses: dependabot/fetch-metadata@v1.1.1
        with:
          github-token: "${{ secrets.GITHUB_TOKEN }}"
      # Here the PR gets approved.
      - name: Approve a PR
        run: gh pr review --approve "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      # Finally, this sets the PR to allow auto-merging for patch and minor
      # updates if all checks pass
      - name: Enable auto-merge for Dependabot PRs
        if: ${{ steps.dependabot-metadata.outputs.update-type != 'version-update:semver-major' }}
        run: gh pr merge --auto --squash "$PR_URL"
        env:
          PR_URL: ${{ github.event.pull_request.html_url }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
